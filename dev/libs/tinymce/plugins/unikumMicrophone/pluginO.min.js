

/*jshint unused:false */
/*global tinymce:true */

/*unik_mic_modal - umm - stageController - soundRecorder*/

var stageController = {};

function renderUnikumMicrophone(editor) {
  $.get('/libs/tinymce/plugins/unikumMicrophone/dialog.html', function (template) {


    $('#unik_mic_modal').html(template);
		$('#umm_rec_btn_start').on('click', function(){stageController.transitionStage(1)});
		$('#umm_btn_restart').on('click', function(){stageController.transitionStage(0)});
		$('#umm_btn_cancel').on('click', function(){parent.tinymce.activeEditor.windowManager.close();});

		//Simulate file upload click
		$('#umm_rec_btn_upload').on('click', function(){
			$('#umm_fileinput').val('');
			$('#umm_fileinput_label').trigger("click");
		});

		//Watch for filechange in fileinput
    $("#umm_fileinput").change(function () {
      var fileName = $(this).val();
      var file = $("#umm_fileinput")[0].files
      stageController.transitionStage(2);
      console.log(file);
    });

		setTimeout(function() {
			//Remove (some) tinymce styling on the modal
	  	editor.windowManager.windows[0].$el.removeClass('mce-container');
	  	editor.windowManager.windows[0].$el.addClass('unikum_mcemodal_fill');
			editor.windowManager.windows[0].$el.find(".mce-foot").css('display', 'none');
			editor.windowManager.windows[0].$el.find(".mce-window-head").css('display', 'none');
		  stageController.transitionStage(0);
		},0)


    initMicrophoneApp(editor);

  });

}


/**
 * Example plugin that adds a toolbar button and menu item.
 */
tinymce.PluginManager.add('unikumMicrophone', function(editor, url) {
	// Add a button that opens a window
	editor.addButton('unikumMicrophone', {
		text: 'Mic',
		icon: false,
		onclick: function() {
			// Open window
			editor.windowManager.open({
				html: '<div id="unik_mic_modal"></div>',
				width: 600,
				height: 400,
			});
			renderUnikumMicrophone(editor);
		}
	});
});



function initMicrophoneApp(editor) {
	stageController = {
	  buttonWrapperEl: $('#umm_buttons'),
	  stages: [
	    {
	      wrapperEl: $('#umm_stage0'),
	      buttons: []
	    },
	    {
	      wrapperEl: $('#umm_stage1'),
	      buttons: [{
	        text: "Klar",
	        class: "btn btn-success btn-block",
	        onClick: 'stageController.transitionStage(2)'
	      }]
	    },
	    {
	      wrapperEl: $('#umm_stage2'),
	      buttons: [{
	        text: "Klar",
	        class: "btn btn-success btn-block",
	        onClick: 'stageController.transitionStage(3)'
	      }]
	    },
	    {
	      wrapperEl: $('#umm_stage3'),
	      buttons: [{
	        text: "Infoga ljudklipp",
	        class: "btn btn-success btn-block",
	        onClick: 'stageController.insertAudio()'
	      }]
	    }
	  ],
	  insertAudio: function() {
			var win = editor.windowManager.getWindows()[0];
			//win.getContentWindow().document.getElementById('content').value
			editor.insertContent('ljudfil');
			win.close();
	  },
	  transitionStage: function(nStage, event) {
	    // Change view/stage
	    stageController.stages.forEach(function(stage){
	      stage.wrapperEl.removeClass('isShowing');
	    });
	    stageController.stages[nStage].wrapperEl.addClass('isShowing');
	    
	    //Populate & animate buttons
	    stageController.buttonWrapperEl.html('');
	    stageController.stages[nStage].buttons.forEach(function(button){
	      stageController.buttonWrapperEl.append(`
	        <button 
	          class="${button.class}"
	          onClick="${button.onClick}"
	        >
	          ${button.text}
	        </button>
	        `)
	    });

	  }
	};

}